{"ast":null,"code":"/*!\n  * Bootstrap manipulator.js v5.0.0-alpha1 (https://getbootstrap.com/)\n  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Manipulator = factory());\n})(this, function () {\n  'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-alpha1): dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  function normalizeData(val) {\n    if (val === 'true') {\n      return true;\n    }\n\n    if (val === 'false') {\n      return false;\n    }\n\n    if (val === Number(val).toString()) {\n      return Number(val);\n    }\n\n    if (val === '' || val === 'null') {\n      return null;\n    }\n\n    return val;\n  }\n\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, function (chr) {\n      return \"-\" + chr.toLowerCase();\n    });\n  }\n\n  var Manipulator = {\n    setDataAttribute: function setDataAttribute(element, key, value) {\n      element.setAttribute(\"data-\" + normalizeDataKey(key), value);\n    },\n    removeDataAttribute: function removeDataAttribute(element, key) {\n      element.removeAttribute(\"data-\" + normalizeDataKey(key));\n    },\n    getDataAttributes: function getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n\n      var attributes = _objectSpread({}, element.dataset);\n\n      Object.keys(attributes).forEach(function (key) {\n        attributes[key] = normalizeData(attributes[key]);\n      });\n      return attributes;\n    },\n    getDataAttribute: function getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(\"data-\" + normalizeDataKey(key)));\n    },\n    offset: function offset(element) {\n      var rect = element.getBoundingClientRect();\n      return {\n        top: rect.top + document.body.scrollTop,\n        left: rect.left + document.body.scrollLeft\n      };\n    },\n    position: function position(element) {\n      return {\n        top: element.offsetTop,\n        left: element.offsetLeft\n      };\n    },\n    toggleClass: function toggleClass(element, className) {\n      if (!element) {\n        return;\n      }\n\n      if (element.classList.contains(className)) {\n        element.classList.remove(className);\n      } else {\n        element.classList.add(className);\n      }\n    }\n  };\n  return Manipulator;\n});","map":{"version":3,"sources":["../../src/dom/manipulator.js"],"names":["val","Number","chr","Manipulator","setDataAttribute","element","normalizeDataKey","removeDataAttribute","getDataAttributes","attributes","Object","normalizeData","getDataAttribute","offset","rect","top","document","left","scrollLeft","position","offsetLeft","toggleClass"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(val) {\n  if (val === 'true') {\n    return true\n  }\n\n  if (val === 'false') {\n    return false\n  }\n\n  if (val === Number(val).toString()) {\n    return Number(val)\n  }\n\n  if (val === '' || val === 'null') {\n    return null\n  }\n\n  return val\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {\n      ...element.dataset\n    }\n\n    Object.keys(attributes).forEach(key => {\n      attributes[key] = normalizeData(attributes[key])\n    })\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-${normalizeDataKey(key)}`))\n  },\n\n  offset(element) {\n    const rect = element.getBoundingClientRect()\n\n    return {\n      top: rect.top + document.body.scrollTop,\n      left: rect.left + document.body.scrollLeft\n    }\n  },\n\n  position(element) {\n    return {\n      top: element.offsetTop,\n      left: element.offsetLeft\n    }\n  },\n\n  toggleClass(element, className) {\n    if (!element) {\n      return\n    }\n\n    if (element.classList.contains(className)) {\n      element.classList.remove(className)\n    } else {\n      element.classList.add(className)\n    }\n  }\n}\n\nexport default Manipulator\n"]},"metadata":{},"sourceType":"script"}