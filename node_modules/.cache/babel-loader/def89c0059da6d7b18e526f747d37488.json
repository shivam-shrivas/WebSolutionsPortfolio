{"ast":null,"code":"/*!\n  * Bootstrap data.js v5.0.0-alpha1 (https://getbootstrap.com/)\n  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Data = factory());\n})(this, function () {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-alpha1): dom/data.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var mapData = function () {\n    var storeData = {};\n    var id = 1;\n    return {\n      set: function set(element, key, data) {\n        if (typeof element.key === 'undefined') {\n          element.key = {\n            key: key,\n            id: id\n          };\n          id++;\n        }\n\n        storeData[element.key.id] = data;\n      },\n      get: function get(element, key) {\n        if (!element || typeof element.key === 'undefined') {\n          return null;\n        }\n\n        var keyProperties = element.key;\n\n        if (keyProperties.key === key) {\n          return storeData[keyProperties.id];\n        }\n\n        return null;\n      },\n      delete: function _delete(element, key) {\n        if (typeof element.key === 'undefined') {\n          return;\n        }\n\n        var keyProperties = element.key;\n\n        if (keyProperties.key === key) {\n          delete storeData[keyProperties.id];\n          delete element.key;\n        }\n      }\n    };\n  }();\n\n  var Data = {\n    setData: function setData(instance, key, data) {\n      mapData.set(instance, key, data);\n    },\n    getData: function getData(instance, key) {\n      return mapData.get(instance, key);\n    },\n    removeData: function removeData(instance, key) {\n      mapData.delete(instance, key);\n    }\n  };\n  return Data;\n});","map":{"version":3,"sources":["../../src/dom/data.js"],"names":["mapData","storeData","id","set","element","key","get","keyProperties","delete","Data","setData","getData","removeData"],"mappings":";;;;;;;;;AAAA;;;;;;;AAOA;;;;;;AAMA,MAAMA,OAAO,GAAI,YAAM;AACrB,QAAMC,SAAS,GAAf,EAAA;AACA,QAAIC,EAAE,GAAN,CAAA;AACA,WAAO;AACLC,MAAAA,GADK,EAAA,SAAA,GAAA,CAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACmB;AACtB,YAAI,OAAOC,OAAO,CAAd,GAAA,KAAJ,WAAA,EAAwC;AACtCA,UAAAA,OAAO,CAAPA,GAAAA,GAAc;AACZC,YAAAA,GAAG,EADS,GAAA;AAEZH,YAAAA,EAAE,EAAFA;AAFY,WAAdE;AAIAF,UAAAA,EAAE;AACH;;AAEDD,QAAAA,SAAS,CAACG,OAAO,CAAPA,GAAAA,CAAVH,EAAS,CAATA,GAAAA,IAAAA;AAVG,OAAA;AAYLK,MAAAA,GAZK,EAAA,SAAA,GAAA,CAAA,OAAA,EAAA,GAAA,EAYa;AAChB,YAAI,CAAA,OAAA,IAAY,OAAOF,OAAO,CAAd,GAAA,KAAhB,WAAA,EAAoD;AAClD,iBAAA,IAAA;AACD;;AAED,YAAMG,aAAa,GAAGH,OAAO,CAA7B,GAAA;;AACA,YAAIG,aAAa,CAAbA,GAAAA,KAAJ,GAAA,EAA+B;AAC7B,iBAAON,SAAS,CAACM,aAAa,CAA9B,EAAgB,CAAhB;AACD;;AAED,eAAA,IAAA;AAtBG,OAAA;AAwBLC,MAAAA,MAxBK,EAAA,SAAA,OAAA,CAAA,OAAA,EAAA,GAAA,EAwBgB;AACnB,YAAI,OAAOJ,OAAO,CAAd,GAAA,KAAJ,WAAA,EAAwC;AACtC;AACD;;AAED,YAAMG,aAAa,GAAGH,OAAO,CAA7B,GAAA;;AACA,YAAIG,aAAa,CAAbA,GAAAA,KAAJ,GAAA,EAA+B;AAC7B,iBAAON,SAAS,CAACM,aAAa,CAA9B,EAAgB,CAAhB;AACA,iBAAOH,OAAO,CAAd,GAAA;AACD;AACF;AAlCI,KAAP;AAHF,GAAiB,EAAjB;;MAyCMK,IAAI,GAAG;AACXC,IAAAA,OADW,EAAA,SAAA,OAAA,CAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EACkB;AAC3BV,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA;AAFS,KAAA;AAIXW,IAAAA,OAJW,EAAA,SAAA,OAAA,CAAA,QAAA,EAAA,GAAA,EAIY;AACrB,aAAOX,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,EAAP,GAAOA,CAAP;AALS,KAAA;AAOXY,IAAAA,UAPW,EAAA,SAAA,UAAA,CAAA,QAAA,EAAA,GAAA,EAOe;AACxBZ,MAAAA,OAAO,CAAPA,MAAAA,CAAAA,QAAAA,EAAAA,GAAAA;AACD;AATU,G","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst mapData = (() => {\n  const storeData = {}\n  let id = 1\n  return {\n    set(element, key, data) {\n      if (typeof element.key === 'undefined') {\n        element.key = {\n          key,\n          id\n        }\n        id++\n      }\n\n      storeData[element.key.id] = data\n    },\n    get(element, key) {\n      if (!element || typeof element.key === 'undefined') {\n        return null\n      }\n\n      const keyProperties = element.key\n      if (keyProperties.key === key) {\n        return storeData[keyProperties.id]\n      }\n\n      return null\n    },\n    delete(element, key) {\n      if (typeof element.key === 'undefined') {\n        return\n      }\n\n      const keyProperties = element.key\n      if (keyProperties.key === key) {\n        delete storeData[keyProperties.id]\n        delete element.key\n      }\n    }\n  }\n})()\n\nconst Data = {\n  setData(instance, key, data) {\n    mapData.set(instance, key, data)\n  },\n  getData(instance, key) {\n    return mapData.get(instance, key)\n  },\n  removeData(instance, key) {\n    mapData.delete(instance, key)\n  }\n}\n\nexport default Data\n"]},"metadata":{},"sourceType":"script"}