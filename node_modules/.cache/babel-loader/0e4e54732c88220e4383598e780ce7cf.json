{"ast":null,"code":"/*!\n  * Bootstrap selector-engine.js v5.0.0-alpha1 (https://getbootstrap.com/)\n  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./polyfill.js')) : typeof define === 'function' && define.amd ? define(['./polyfill.js'], factory) : (global = global || self, global.SelectorEngine = factory(global.Polyfill));\n})(this, function (polyfill_js) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-alpha1): dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NODE_TEXT = 3;\n  var SelectorEngine = {\n    matches: function matches(element, selector) {\n      return element.matches(selector);\n    },\n    find: function find(selector, element) {\n      var _ref;\n\n      if (element === void 0) {\n        element = document.documentElement;\n      }\n\n      return (_ref = []).concat.apply(_ref, polyfill_js.find.call(element, selector));\n    },\n    findOne: function findOne(selector, element) {\n      if (element === void 0) {\n        element = document.documentElement;\n      }\n\n      return polyfill_js.findOne.call(element, selector);\n    },\n    children: function children(element, selector) {\n      var _ref2;\n\n      var children = (_ref2 = []).concat.apply(_ref2, element.children);\n\n      return children.filter(function (child) {\n        return child.matches(selector);\n      });\n    },\n    parents: function parents(element, selector) {\n      var parents = [];\n      var ancestor = element.parentNode;\n\n      while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n        if (this.matches(ancestor, selector)) {\n          parents.push(ancestor);\n        }\n\n        ancestor = ancestor.parentNode;\n      }\n\n      return parents;\n    },\n    prev: function prev(element, selector) {\n      var previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n    next: function next(element, selector) {\n      var next = element.nextElementSibling;\n\n      while (next) {\n        if (this.matches(next, selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    }\n  };\n  return SelectorEngine;\n});","map":{"version":3,"sources":["../../src/dom/selector-engine.js"],"names":["NODE_TEXT","SelectorEngine","matches","element","find","document","documentElement","findFn","findOne","children","child","parents","ancestor","Node","prev","previous","next"],"mappings":";;;;;;;;;AAAA;;;;;;;AASA;;;;;;AAMA,MAAMA,SAAS,GAAf,CAAA;MAEMC,cAAc,GAAG;AACrBC,IAAAA,OADqB,EAAA,SAAA,OAAA,CAAA,OAAA,EAAA,QAAA,EACM;AACzB,aAAOC,OAAO,CAAPA,OAAAA,CAAP,QAAOA,CAAP;AAFmB,KAAA;AAKrBC,IAAAA,IALqB,EAAA,SAAA,IAAA,CAAA,QAAA,EAAA,OAAA,EAK8B;AAAA,UAAA,IAAA;;AAAA,UAApCD,OAAoC,KAAA,KAAA,CAAA,EAAA;AAApCA,QAAAA,OAAoC,GAA1BE,QAAQ,CAACC,eAAnBH;AAAoC;;AACjD,aAAO,CAAA,IAAA,GAAA,EAAA,EAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAaI,WAAAA,CAAAA,IAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAApB,QAAoBA,CAAb,CAAP;AANmB,KAAA;AASrBC,IAAAA,OATqB,EAAA,SAAA,OAAA,CAAA,QAAA,EAAA,OAAA,EASiC;AAAA,UAApCL,OAAoC,KAAA,KAAA,CAAA,EAAA;AAApCA,QAAAA,OAAoC,GAA1BE,QAAQ,CAACC,eAAnBH;AAAoC;;AACpD,aAAOK,WAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAAP,QAAOA,CAAP;AAVmB,KAAA;AAarBC,IAAAA,QAbqB,EAAA,SAAA,QAAA,CAAA,OAAA,EAAA,QAAA,EAaO;AAAA,UAAA,KAAA;;AAC1B,UAAMA,QAAQ,GAAG,CAAA,KAAA,GAAA,EAAA,EAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAaN,OAAO,CAArC,QAAiB,CAAjB;;AAEA,aAAO,QAAQ,CAAR,MAAA,CAAgB,UAAA,KAAA,EAAK;AAAA,eAAIO,KAAK,CAALA,OAAAA,CAAJ,QAAIA,CAAJ;AAA5B,OAAO,CAAP;AAhBmB,KAAA;AAmBrBC,IAAAA,OAnBqB,EAAA,SAAA,OAAA,CAAA,OAAA,EAAA,QAAA,EAmBM;AACzB,UAAMA,OAAO,GAAb,EAAA;AAEA,UAAIC,QAAQ,GAAGT,OAAO,CAAtB,UAAA;;AAEA,aAAOS,QAAQ,IAAIA,QAAQ,CAARA,QAAAA,KAAsBC,IAAI,CAAtCD,YAAAA,IAAuDA,QAAQ,CAARA,QAAAA,KAA9D,SAAA,EAA+F;AAC7F,YAAI,KAAA,OAAA,CAAA,QAAA,EAAJ,QAAI,CAAJ,EAAsC;AACpCD,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,QAAAA;AACD;;AAEDC,QAAAA,QAAQ,GAAGA,QAAQ,CAAnBA,UAAAA;AACD;;AAED,aAAA,OAAA;AAhCmB,KAAA;AAmCrBE,IAAAA,IAnCqB,EAAA,SAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAmCG;AACtB,UAAIC,QAAQ,GAAGZ,OAAO,CAAtB,sBAAA;;AAEA,aAAA,QAAA,EAAiB;AACf,YAAIY,QAAQ,CAARA,OAAAA,CAAJ,QAAIA,CAAJ,EAAgC;AAC9B,iBAAO,CAAP,QAAO,CAAP;AACD;;AAEDA,QAAAA,QAAQ,GAAGA,QAAQ,CAAnBA,sBAAAA;AACD;;AAED,aAAA,EAAA;AA9CmB,KAAA;AAiDrBC,IAAAA,IAjDqB,EAAA,SAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAiDG;AACtB,UAAIA,IAAI,GAAGb,OAAO,CAAlB,kBAAA;;AAEA,aAAA,IAAA,EAAa;AACX,YAAI,KAAA,OAAA,CAAA,IAAA,EAAJ,QAAI,CAAJ,EAAkC;AAChC,iBAAO,CAAP,IAAO,CAAP;AACD;;AAEDa,QAAAA,IAAI,GAAGA,IAAI,CAAXA,kBAAAA;AACD;;AAED,aAAA,EAAA;AACD;AA7DoB,G","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { find as findFn, findOne } from './polyfill'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3\n\nconst SelectorEngine = {\n  matches(element, selector) {\n    return element.matches(selector)\n  },\n\n  find(selector, element = document.documentElement) {\n    return [].concat(...findFn.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return findOne.call(element, selector)\n  },\n\n  children(element, selector) {\n    const children = [].concat(...element.children)\n\n    return children.filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (this.matches(ancestor, selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (this.matches(next, selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  }\n}\n\nexport default SelectorEngine\n"]},"metadata":{},"sourceType":"script"}